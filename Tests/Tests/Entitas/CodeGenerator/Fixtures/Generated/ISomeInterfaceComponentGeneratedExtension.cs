//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

public class ISomeInterfaceComponent : IComponent {
    public ISomeInterface value;
}

namespace Entitas {
    public interface IISomeInterfaceEntity : IEntity {
        ISomeInterfaceComponent iSomeInterface { get; }
        bool hasISomeInterface { get; }
        IISomeInterfaceEntity AddISomeInterface(ISomeInterface newValue);
        IISomeInterfaceEntity ReplaceISomeInterface(ISomeInterface newValue);
        IISomeInterfaceEntity RemoveISomeInterface();
    }

    public partial class Entity {
        public ISomeInterfaceComponent iSomeInterface { get { return (ISomeInterfaceComponent)GetComponent(SomePoolComponentIds.ISomeInterface); } }

        public bool hasISomeInterface { get { return HasComponent(SomePoolComponentIds.ISomeInterface); } }

        public Entity AddISomeInterface(ISomeInterface newValue) {
            var component = CreateComponent<ISomeInterfaceComponent>(SomePoolComponentIds.ISomeInterface);
            component.value = newValue;
            return (Entity)AddComponent(SomePoolComponentIds.ISomeInterface, component);
        }

        public Entity ReplaceISomeInterface(ISomeInterface newValue) {
            var component = CreateComponent<ISomeInterfaceComponent>(SomePoolComponentIds.ISomeInterface);
            component.value = newValue;
            ReplaceComponent(SomePoolComponentIds.ISomeInterface, component);
            return this;
        }

        public Entity RemoveISomeInterface() {
            return (Entity)RemoveComponent(SomePoolComponentIds.ISomeInterface);
        }
    }
}

    public partial class SomePoolMatcher {
        static IMatcher _matcherISomeInterface;

        public static IMatcher ISomeInterface {
            get {
                if (_matcherISomeInterface == null) {
                    var matcher = (Matcher)Matcher.AllOf(SomePoolComponentIds.ISomeInterface);
                    matcher.componentNames = SomePoolComponentIds.componentNames;
                    _matcherISomeInterface = matcher;
                }

                return _matcherISomeInterface;
            }
        }
    }
